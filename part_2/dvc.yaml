# dvc.yaml
vars:
  - params.yaml
  - base:
      root_dir: ..

stages:

  preprocess:
    cmd: >-
      python src/preprocess.py
      --data_dir ${base.root_dir}/${preprocess.data_dir}
      --output_dir ${base.root_dir}/${preprocess.output_dir}
      --blur_kernel ${preprocess.blur_kernel}
      --threshold_method ${preprocess.threshold_method}
      --morph_kernel ${preprocess.morph_kernel}
    deps:
      - src/preprocess.py
      - ${base.root_dir}/${preprocess.data_dir}
    outs:
      - ${preprocess.output_dir}:
          cache: false

  segment:
    cmd: >-
      python src/segment.py
      --input_dir ${base.root_dir}/${segment.input_dir}
      --output_file ${base.root_dir}/${segment.output_file}
      --min_area ${segment.min_area}
      --max_area ${segment.max_area}
      --connectivity ${segment.connectivity}
    deps:
      - src/segment.py
      - ${base.root_dir}/${segment.input_dir}
    outs:
      - ${base.root_dir}/${segment.output_file}

  extract:
    cmd: >-
      python src/extract.py
      --segmentation_file ${base.root_dir}/${extract.segmentation_file}
      --input_dir ${base.root_dir}/${extract.input_dir}
      --output_file ${base.root_dir}/${extract.output_file}
      --hog_orientations ${extract.hog_orientations}
      --hog_pixels_per_cell ${extract.hog_pixels_per_cell}
      --hog_cells_per_block ${extract.hog_cells_per_block}
      --lbp_radius ${extract.lbp_radius}
      --lbp_points ${extract.lbp_points}
    deps:
      - src/extract.py
      - ${base.root_dir}/${extract.segmentation_file}
      - ${base.root_dir}/${extract.input_dir}
    outs:
      - ${base.root_dir}/${extract.output_file}

  train:
    cmd: >-
      python src/train.py
      --feature_file ${base.root_dir}/${train.feature_file}
      --labels_dir ${base.root_dir}/${train.labels_dir}
      --output_model ${base.root_dir}/${train.output_model}
      --model_name ${train.model_name}
      --random_state ${train.random_state}
    deps:
      - src/train.py
      - ${base.root_dir}/${train.feature_file}
      - ${base.root_dir}/${train.labels_dir}
    outs:
      - ${base.root_dir}/${train.output_model}

  evaluate:
    cmd: >-
      python src/evaluate.py
      --model_file ${base.root_dir}/${train.output_model}
      --images_dir ${base.root_dir}/${preprocess.data_dir}
      --labels_dir ${base.root_dir}/${train.labels_dir}
      --metrics_file ${base.root_dir}/${evaluate.metrics_file}
      --predictions_file ${base.root_dir}/${evaluate.predictions_file}
      --blur_kernel ${preprocess.blur_kernel}
      --threshold_method ${preprocess.threshold_method}
      --morph_kernel ${preprocess.morph_kernel}
      --min_area ${segment.min_area}
      --hog_orientations ${extract.hog_orientations}
      --hog_pixels_per_cell ${extract.hog_pixels_per_cell}
      --hog_cells_per_block ${extract.hog_cells_per_block}
      --lbp_radius ${extract.lbp_radius}
      --lbp_points ${extract.lbp_points}
    deps:
      - src/evaluate.py
      - ${base.root_dir}/${train.output_model}
      - ${base.root_dir}/${preprocess.data_dir}
      - ${base.root_dir}/${train.labels_dir}
    outs:
      - ${base.root_dir}/${evaluate.metrics_file}:
          cache: false
      - ${base.root_dir}/${evaluate.predictions_file}:
          cache: false

  tune:
     cmd: python src/tune.py --params params.yaml
     deps:
       - src/tune.py
       - src/train.py
       - src/evaluate.py
       - params.yaml
     outs:
       - ${base.root_dir}/outputs/tuning_results.csv:
          cache: false
